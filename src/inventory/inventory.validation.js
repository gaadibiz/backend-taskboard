const Joi = require('joi');

exports.upsertInventorySchema = Joi.object({
  inventory_uuid: Joi.string().guid().max(50).allow(null, ''),
  grn_uuid: Joi.string().guid().max(50).allow(null, ''),
  grn_no: Joi.string().max(50).allow(null, ''),
  purchase_invoice_type: Joi.string().max(100).required(),
  dated: Joi.string().allow(null),
  inv_invoice_no: Joi.string().max(100).required(),
  challan_no: Joi.string().allow(null, ''),
  challan_date: Joi.string().isoDate().allow(null, ''),
  po_number: Joi.string().allow(null, ''),
  po_date: Joi.string().allow(null, ''),
  eway_bill_no: Joi.string().allow('', null),
  lr_no: Joi.string().allow('', null),
  delivery_note: Joi.string().allow('', null),
  mode_of_payment: Joi.string().allow('', null),
  reference_no: Joi.string().allow('', null),
  other_references: Joi.string().allow('', null),
  buyers_order_no: Joi.string().allow('', null),
  dispatch_doc_no: Joi.string().allow('', null),
  delivery_note_date: Joi.string().isoDate().allow(null),
  dispatched_through: Joi.string().allow('', null),
  destination: Joi.string().allow('', null),
  bill_of_lading: Joi.string().allow('', null),
  motor_vehicle_no: Joi.string().allow('', null),
  products: Joi.array(),
  total_amount_after_tax: Joi.number().precision(2).allow(null),
  total_amount: Joi.number().precision(2).allow(null),
  tcs: Joi.number().precision(2).allow(null),
  tcs_amount: Joi.number().precision(2).allow(null),
  tcs_sign: Joi.string().required().valid('ADD', 'DEDUCT'),
  discount: Joi.number().precision(2).allow(null),
  discount_amount: Joi.number().precision(2).allow(null),
  consignee_uuid: Joi.string().guid().max(100).allow(null, ''),
  consignee_name: Joi.string().allow('', null),
  consignee_branch_uuid: Joi.string().guid().max(100).allow(null, ''),
  consignee_branch_name: Joi.string().allow('', null),
  consignee_address_line1: Joi.string().allow('', null),
  consignee_address_line2: Joi.string().allow('', null),
  consignee_address_city: Joi.string().allow('', null),
  consignee_address_state: Joi.string().allow('', null),
  consignee_address_country: Joi.string().allow('', null),
  consignee_GSTIN: Joi.string().allow('', null),
  consignee_code: Joi.string().allow('', null),
  consignee_address_pincode: Joi.string().allow('', null),
  buyer_uuid: Joi.string().guid().max(100).allow(null, ''),
  buyer_name: Joi.string().allow('', null),
  buyer_branch_uuid: Joi.string().guid().max(100).allow(null, ''),
  buyer_branch_name: Joi.string().allow('', null),
  buyer_address_line1: Joi.string().allow('', null),
  buyer_address_line2: Joi.string().allow('', null),
  buyer_address_city: Joi.string().allow('', null),
  buyer_address_state: Joi.string().allow('', null),
  buyer_address_country: Joi.string().allow('', null),
  buyer_GSTIN: Joi.string().allow('', null),
  buyer_code: Joi.string().allow('', null),
  buyer_address_pincode: Joi.string().allow('', null),
  seller_uuid: Joi.string().guid().max(50).allow(null, ''),
  seller_name: Joi.string().allow('', null),
  vendor_registration_type: Joi.string().allow('', null),
  seller_address_line1: Joi.string().allow('', null),
  seller_address_line2: Joi.string().allow('', null),
  seller_address_city: Joi.string().allow('', null),
  seller_address_state: Joi.string().allow('', null),
  seller_address_country: Joi.string().allow('', null),
  seller_GSTIN: Joi.string().allow('', null),
  seller_code: Joi.string().allow('', null),
  seller_address_pincode: Joi.string().allow('', null),
  dispatch_through: Joi.string().max(255).allow('', null),
  transport_id: Joi.string().max(255).allow('', null),
  transport_doc_no: Joi.string().max(255).allow('', null),
  transport_doc_date: Joi.string().max(255).allow('', null),
  bank_account_uuid: Joi.string().allow('', null),
  bank_account_name: Joi.string().allow('', null),
  document: Joi.string().allow('', null),
  status: Joi.string().valid('ACTIVE', 'INACIVE'),
  created_by_uuid: Joi.string().guid().max(50).allow('', null),
  created_by_name: Joi.string().max(50).allow('', null),
  modified_by_uuid: Joi.string().guid().allow('', null),
  modified_by_name: Joi.string().max(50).allow('', null),
});

exports.getInventorySchema = Joi.object({
  inventory_uuid: Joi.string().max(50),
  pageNo: Joi.number().integer().min(1),
  itemPerPage: Joi.number().integer().min(1),
  from_date: Joi.string().regex(/^\d{4}-\d{2}-\d{2}$/),
  to_date: Joi.string().regex(/^\d{4}-\d{2}-\d{2}$/),
  status: Joi.string(),
  cancelled_status: Joi.boolean().default(false),
  columns: Joi.string(),
  value: Joi.string(),
});
