const Joi = require('joi');

exports.upsertPurchaseOrderSchema = Joi.object({
  purchase_order_uuid: Joi.string().guid().max(100).allow('', null),
  purchase_order_type: Joi.string().max(255).allow('', null),
  purchase_order_no: Joi.string().allow(''),
  purchase_order_date: Joi.string().required(),
  job_uuid: Joi.string().guid().max(100).required(),
  job_name: Joi.string().max(255).required(),
  project_manager_uuid: Joi.string().guid().max(100).required(),
  project_manager_name: Joi.string().max(255).required(),
  job_order_no: Joi.string().max(255).required(),
  challan_no: Joi.string().allow(null, ''),
  challan_date: Joi.string().isoDate().allow(null, ''),
  lr_no: Joi.string().max(100).allow('', null),
  delivery_type: Joi.string().max(255).allow('', null),
  dispatch_through: Joi.string().max(255).allow('', null),
  transport_id: Joi.string().max(255).allow('', null),
  transport_doc_no: Joi.string().max(255).allow('', null),
  transport_doc_date: Joi.string().max(255).allow('', null),
  vehicle_no: Joi.string().max(100).allow('', null),
  place_of_supply: Joi.string().max(255).allow('', null),
  billing_company_uuid: Joi.string().guid().max(100).allow('', null),
  billing_company_name: Joi.string().max(255).allow('', null),
  billing_company_branch_uuid: Joi.string().guid().max(100).allow('', null),
  billing_company_branch_name: Joi.string().max(255).allow('', null),
  billing_company_branch_address_state: Joi.string().max(255).allow('', null),
  vendor_uuid: Joi.string().guid().max(100).allow('', null),
  vendor_name: Joi.string().max(255).allow('', null),
  registration_type: Joi.string().max(255).allow('', null),
  vendor_gstin: Joi.string().max(255).allow('', null),
  vendor_address_line1: Joi.string().max(500).allow('', null),
  vendor_address_line2: Joi.string().max(500).allow('', null),
  vendor_address_city: Joi.string().max(100).allow('', null),
  vendor_address_state: Joi.string().max(255).allow('', null),
  vendor_address_pincode: Joi.string().max(255).allow('', null),
  vendor_address_country: Joi.string().max(255).allow('', null),
  delivery_address_name: Joi.string().max(500).allow('', null),
  delivery_address_line1: Joi.string().max(500).allow('', null),
  delivery_address_line2: Joi.string().max(500).allow('', null),
  delivery_address_city: Joi.string().max(100).allow('', null),
  delivery_address_state: Joi.string().max(255).allow('', null),
  delivery_address_pincode: Joi.string().max(255).allow('', null),
  delivery_address_country: Joi.string().max(255).allow('', null),
  contact_uuid: Joi.string().guid().max(100).allow('', null),
  contact_name: Joi.string().max(255).allow('', null),
  phone_number: Joi.string().max(255).allow('', null),
  remark: Joi.string().max(255).allow('', null),
  invoice_items: Joi.array(),
  total_amount: Joi.number().precision(2).allow(null),
  tcs: Joi.number().precision(2).allow(null),
  tcs_amount: Joi.number().precision(2).allow(null),
  discount: Joi.number().precision(2).allow(null),
  discount_amount: Joi.number().precision(2).allow(null),
  is_round_off: Joi.number().precision(2).allow(null),
  term_and_condition: Joi.string().max(255).allow('', null),
  total_amount_after_tax: Joi.number().precision(2).allow(null),
  status: Joi.string()
    .max(255)
    .valid(
      'PURCHASE_ORDER_REQUESTED',
      'PURCHASE_ORDER_APPROVAL_REQUESTED',
      'INACTIVE',
    )
    .required()
    .default('PURCHASE_ORDER_REQUESTED'),
  created_by_uuid: Joi.string().guid().max(50).allow('', null),
});

exports.getPurchaseOrderSchema = Joi.object({
  combined_purchase_order_no: Joi.string(),
  purchase_order_uuid: Joi.string().guid(),
  pageNo: Joi.number().integer().min(1),
  itemPerPage: Joi.number().integer().min(1),
  from_date: Joi.string().regex(/^\d{4}-\d{2}-\d{2}$/),
  to_date: Joi.string().regex(/^\d{4}-\d{2}-\d{2}$/),
  status: Joi.string(),
  cancelled_status: Joi.boolean().default(false),
  columns: Joi.string(),
  value: Joi.string(),
});
